---
import { Picture } from 'astro:assets';
import defaultImage from '../assets/images/default.jpg';
const { postdata, postcardstyle } = Astro.props;
const imageMap = import.meta.glob('../assets/images/*', { eager: true });
const resolveImage = (image) => {
  return image && imageMap[`../assets/images/${image.url}`] ? imageMap[`../assets/images/${image.url}`].default : null;};
const imagePath = resolveImage(postdata.frontmatter.image) || defaultImage;
const formattedDate = new Date(postdata.frontmatter.pubDate).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC",
});
---
<style>
    .post-card{
        list-style: none;
        margin:0 0 2rem 0;
        display:grid;
        gap: .4rem;
    }
    
    .post-title{
        margin:0;
    }
    .post-title a{
        color:var(--color-accent);
        text-decoration: none;
        display: block;
    }
    img{
        max-width:100%;
        height:auto;
        aspect-ratio: 4 / 3; object-fit: cover;
    }
    .post-date{
        font-size:.8rem;
        margin:0;
    }
    .tag{
        display: inline-block;
        font-size: .7rem;
        background-color: var(--color-accent-light);
        color:var(--color-accent);;
        text-decoration: none;
        text-transform: uppercase;
        margin-right:.2rem; padding:.1rem .6rem
    }

    @media only screen and (min-width: 634px) {

    .post-card{
        list-style: none;
        grid-template-columns: 200px 1fr;
        gap: .4rem;
        column-gap: 1rem;
        margin:0 0 3rem 0;
    }
    .post-card_img{
        grid-row: span 4;
    }
    }
</style>
<li class="post-card">
<a href={postdata.url} class="post-card_img" aria-hidden="true">
    <Picture src={imagePath} alt={postdata.frontmatter.image.alt}} />
</a>
{postcardstyle === "blog" ? (
   <h2 class="post-title"><a href={postdata.url}>{postdata.frontmatter.title}</a></h2>
  ) : (
  <h3 class="post-title"><a href={postdata.url}>{postdata.frontmatter.title}</a></h3>
  )}
  

<div class="post-date">{formattedDate}</div>
<div class="blogContent">{postdata.frontmatter.description}</div>
{postcardstyle === "blog" && (

    <div class="tags">
    {postdata.frontmatter.tags.map((tag) => {
        // Convert tag to display format: "Proactive Teams"
        const formattedTag = tag
        .split('-')  // Split at dashes
        .join(' '); // Rejoin with spaces
        return (
        <a href={`/tags/${tag}`} class="tag">{formattedTag}</a>
        );
    })}
    </div>
)}

</li>