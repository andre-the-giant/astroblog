---
import BaseLayout from './BaseLayout.astro';
import { Picture } from 'astro:assets';
import defaultImage from '../assets/images/default.jpg';
const resolveImage = (image) => {
    return image && imageMap[`../assets/images/${image.url}`] ? imageMap[`../assets/images/${image.url}`].default : null;};
const { frontmatter } = Astro.props;
const imageMap = import.meta.glob('../assets/images/*', { eager: true });
const formattedDate = new Date(frontmatter.pubDate).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC",
});
const imagePath = resolveImage(frontmatter.image) || defaultImage;
---
<style>

    .blogImage{
        width:100%;
        height:auto;
        aspect-ratio: 16 / 9; 
        object-fit: cover;
        margin-top: 2rem;
    }
    h1{
            margin: 1rem 0;
    }
    .publicationdate{
        margin:1rem 0;
        font-size: .8rem;
    }
    .tags{
        margin: 2rem 0 5rem 0
    }

    .tag{
        display: inline-block;
        font-size: .7rem;
        background-color: rgb(225, 238, 229);
        color:rgb(63, 106, 76);;
        text-decoration: none;
        text-transform: uppercase;
        margin-right:.2rem; 
        padding:.1rem .6rem
    }
    @media only screen and (min-width: 634px) {
        .blogImage{
            height:auto;
            margin-top: 2rem;
        }

        h1{ margin: -10rem -3rem -7rem;
            padding:2rem 3rem ; 
            background-color:#eeeeeee9; 
            display: inline-block; }
        .publicationdate{
            margin:3rem 0 1rem 0;
        }
    }
    @media only screen and (min-width: 1000px) {
        .blogImage{
            width:75%;
            margin-left:-25%;
            aspect-ratio: 4 / 3; 
        }
    }
</style>
<BaseLayout pageTitle={frontmatter.title} description={frontmatter.description} isblog="true" pubdate={frontmatter.pubDate} imagepath={imagePath.src}>
   <article>
    <Picture src={imagePath} alt={frontmatter.image.alt}}  pictureAttributes={{ style: "background-color: #CCCCCC "}} class="blogImage" />
    <h1>{frontmatter.title}</h1>
    <div class="publicationdate">Publication date: {formattedDate}</div>
    <slot />

    <div class="tags">
        {frontmatter.tags.map((tag) => {
            // Convert tag to display format: "Proactive Teams"
            const formattedTag = tag
            .split('-')  // Split at dashes
            .join(' '); // Rejoin with spaces
            return (
            <a href={`/tags/${tag}`} class="tag">{formattedTag}</a>
            );
        })}
        </div>
    </article>
</BaseLayout>